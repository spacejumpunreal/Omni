# WorkItem
## API
- ctor()
- perform(): execute on current thread immediately
- wait(): //not necessary
- storage
    - use std::function directly: too large(64bytes on MVSC), will use dynmaic allocation when too large
    - function ptr + POD args: can't use lambda(can be good: explicit), no ctor/dtor for args

# Group
## detail
- ctor(queue, count)

# Initialize/Finalize sequence
## Initialize
- MainThread ThreadData alloc, init
- WorkerThreads ThreadData alloc, init

## SystemInitialize
- on MainThread, in System::InitializeAndJoin()
	- called ThreadData::GetThisThreadData().RunAndFinalizeOnMain(onSystemInitialized);
		- call onSystemInitialized() callback
		- loop/wait on MainQueue
			- TriggerFinalization called
			- got AskedToQuit, jump out of loop
		- wait for all threads to quit
		- poll all queues until all queues are empty
		- call System::Finalize()

## TriggerFinalization
- set flags
- Send cleanup task to MainThread

## MainThreadedCleanupTask
- call every module's FinalizeThreads(), to join all worker threads

## Finalize